name: üöÄ Deploy

on:
  push:
    branches:
      - main

jobs:
  changes:
    name: üîé Determine deployable changes
    runs-on: ubuntu-latest
    outputs:
      DEPLOYABLE: ${{ steps.deploy_changes.outputs.DEPLOYABLE }}
      CONTENT: ${{ steps.content_changes.outputs.CONTENT }}
      CONTENT_CHANGED: ${{ steps.content_changes.outputs.CONTENT_CHANGED }}
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: "50"

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: üîé Determine deployable changes
        id: deploy_changes
        run: >-
          echo "DEPLOYABLE=$(node ./scripts/is-deployable.js ${{ github.sha }})" >> $GITHUB_OUTPUT
      - name: ‚ùì Deployable
        run: >-
          echo "DEPLOYABLE: ${{ steps.deploy_changes.outputs.DEPLOYABLE }}"

      - name: üîé Determine content changes
        id: content_changes
        run: >-
          echo "CONTENT=$(node ./scripts/get-changed-content.js ${{ github.sha }})" >> $GITHUB_OUTPUT
          echo "CONTENT_CHANGED=${{ Boolean($(node ./scripts/get-changed-content.js ${{ github.sha }})) }}" >> $GITHUB_OUTPUT
      - name: ‚ùì Content
        run: >-
          echo "CONTENT_CHANGED: ${{ steps.content_changes.outputs.CONTENT_CHANGED }}"
          echo "CONTENT: ${{ steps.content_changes.outputs.CONTENT }}"

  deploy:
    name: Deploy
    needs: [changes]
    if: needs.changes.outputs.DEPLOYABLE == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: ü•∂ Cache dependencies
        if: $${{ !env.ACT }}
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-
            ${{ runner.OS }}-

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: üì¶ Install npm packages
        run: npm install && npm run postinstall

      - name: üõ† Build Remix app
        run: npm run build
        env:
          COMMIT_SHA: ${{ github.sha }}

      # - name: üéâ Publish
      #   uses: cloudflare/wrangler-action@1.3.0
      #   with:
      #     apiToken: ${{ secrets.CLOUDFLARE_GLOBAL_TOKEN }}

      - name: üéâ Publish
        uses: Cyb3r-Jak3/actions-cloudflare-pages@v1.0.1
        with:
          account: ${{ secrets.CLOUDFLARE_ACCOUNT }}
          project: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          email: ${{ secrets.CLOUDFLARE_EMAIL }}
          global_token: ${{ secrets.CLOUDFLARE_GLOBAL_TOKEN }}
        env:
          COMMIT_SHA: ${{ github.sha }}

  compile:
    name: üõ† Compile MDX
    if: needs.changes.outputs.CONTENT_CHANGED == 'true'
    needs: [changes]
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: "50"

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: ü•∂ Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-
            ${{ runner.OS }}-

      - name: üì¶ Install npm packages
        run: cd ./scripts/mdx && npm install

      - name: üöÄ Compile and post MDX
        run: cd ./scripts/mdx && node ./compile-mdx.js --root ../../ --json --file ${{ needs.changes.outputs.CONTENT }}
        env:
          API_URL: ${{ secrets.API_URL }}
          POST_API_KEY: ${{ secrets.POST_API_KEY }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}

      - name: üöÄ Update content sha
        run: cd ./scripts/mdx && node ./update-content-sha.js
        env:
          COMMIT_SHA: ${{ github.sha }}
          API_URL: ${{ secrets.API_URL }}
          POST_API_KEY: ${{ secrets.POST_API_KEY }}
